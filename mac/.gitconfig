[user]
	name = User Example
	email = user@example.com
[color]
	ui = auto
[core]
	editor = sub -w
	pager = less -x1,5
[push]
	default = current
[branch]
	autosetuprebase = always
[status]
	submodulesummary = true
[alias]
	panic = !tar cvf ../git_panic.tar .
    yank = !echo "git pull --rebase && git submodule update --init --recursive"; git pull --rebase && git submodule update --init --recursive
    d = diff
    co = checkout
    br = branch
    st = status
    ci = commit
    cia = commit --amend
    staged = diff --cached
    cp = cherry-pick
    ls = !ls -dF `git ls-tree --name-only HEAD`
    lsa = !ls -dlF `git ls-tree --name-only HEAD`

    rma = !git ls-files --deleted -z | xargs -0 git rm

    this = !git init && git add . && git commit -m \"initial commit\"

    amend = !git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend

    lower = reset HEAD
    raise = add -A

    alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\t=> \\2/' | sort

    ignore=!([ ! -e .gitignore ] && touch .gitignore) | echo $1 >>.gitignore

    unstage = reset HEAD
	uncommit = reset --soft HEAD^
	diffs = diff --staged

    id = !printf `git log -n 1 --pretty=%H` | pbcopy && echo `pbpaste`

    lg2 = log --graph --pretty=format:'%C(cyan)%h%C(green) %an %C(yellow)%cr%C(reset): %s%C(reset)%C(magenta)%d%Creset' --abbrev-commit --date=relative

    lg = log --graph --pretty=format:'%C(cyan)%h%C(green) %an %C(yellow)%cr%C(reset): %s%C(reset)%C(magenta)%d%Creset' --abbrev-commit --date=relative

    hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
    type = cat-file -t
    dump = cat-file -p

    wip = !"git add -A; git ls-files --deleted -z | xargs -0 git rm; git commit -m \"wip\""
    unwip = !"git log -n 1 | grep -q -c wip && git reset HEAD~1"
    rb = !"git wip;git rebase -i origin/master;git unwip"
    pr = !"git fetch;git wip;git rebase --stat origin;git unwip;git heads"
    head = !"git log -n1"
    lost = !"git fsck | awk '/dangling commit/ {print $3}' | git show --format='SHA1: %C(yellow)%h%Creset %f' --stdin | awk '/SHA1/ {sub(\"SHA1: \", \"\"); print}'"
    heads = !"git log origin/master.. --format='%Cred%h%Creset;%C(yellow)%an%Creset;%H;%Cblue%f%Creset' | git name-rev --stdin --always --name-only | column -t -s';'"

    sup = submodule update --init --recursive
    patches = log --reverse -p
    grab = fetch -p --recurse-submodules=yes

    cleanall = clean -fxd

[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =

[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
    
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
